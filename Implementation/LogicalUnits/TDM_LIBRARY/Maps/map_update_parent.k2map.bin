<Graph name="map_update_parent.k2map.bin" lastPartID="147" mapType="Mapping" logicalUnitNodeType="Full_Hierarchy">
  <VirtualDBMapNode id="0" partID="129" pos="40 44.72657" itemWidth="160">
    <ViewHierarchy>{"TableView":{"LazyDataUpdateLu":{"SyncMethod":1,"Enabled":false,"PerformLazyUpdateEvery":"1.00:00:00","TruncateBeforeSyncSerialized":true},"Name":"ADI_ROOT_TABLE","ID":"tbl_ADI_ROOT_TABLE","Version":"2.6.4.0","EntityId":"tblCol_a62a217a9e624033a0a52b610ff29327","ColumnsCollation":0,"FullTextSearch":false,"ItemStatisticsType":0,"ExposeWithAPI":false,"IgnoreSerialization":false,"SerializationName":"","TableColumns":[{"HasValidations":false,"Name":"K2_TDM_EID","ID":"tblCol_a62a217a9e624033a0a52b610ff29327","Index":0,"DataType":"Text","Mandatory":true,"ColumnType":0,"LudbProperty":false,"ExposeWithAPI":true,"SerializationType":0,"SerializationName":"PATIENT_ID","IsInputArgument":false},{"HasValidations":false,"Name":"SOURCE_ENV","ID":"tblCol_75428296c67d47a68c53ce5f06beb89c","Index":1,"DataType":"Text","Mandatory":false,"ColumnType":0,"LudbProperty":false,"ExposeWithAPI":true,"SerializationType":0,"SerializationName":"SSN","IsInputArgument":false},{"HasValidations":false,"Name":"IID","ID":"tblCol_b599b57c5a97443d8dd3b8e007830bbd","Index":2,"DataType":"Text","Mandatory":false,"ColumnType":0,"LudbProperty":false,"ExposeWithAPI":true,"SerializationType":0,"SerializationName":"FIRST_NAME","IsInputArgument":false}],"IndexesList":[],"EnrichmentList":[{"Name":"k2Seq_setUniqueGlobal","ExecuteEnrichmentAt":0,"Type":0,"TableName":"ADI_ROOT_TABLE"},{"Name":"k2Seq_updateSequences","ExecuteEnrichmentAt":0,"Type":0,"TableName":"ADI_ROOT_TABLE"}]},"IsExpanded":true,"WasExpanded":false,"HideView":false,"Children":[]}</ViewHierarchy>
  </VirtualDBMapNode>
  <VcMapNode id="1" L0="2" partID="143" name="SharedSequences" topLable="k2_UpdateRelationChildParent" pos="436 68" size="239.065552 84.14581">
    <TargetObject>{"$id":"1","TargetObjectType":6,"TopTitle":"k2_UpdateRelationChildParent","BottomTitle":"SharedSequences","Desc":"","IsExpanded":false,"WasExpanded":false,"MapTargetExtraData":{"TargetOrder":1,"TargetDistinct":false,"TargetJoinType":2,"TargetOffset":-1,"TargetLimit":-1,"StatisticsType":0,"MapMode":8,"OnFailure":0,"KeyColumns":[],"ConstraintList":[],"IgnoredErrorMessagesIDs":""},"InputList":[{"Name":"eid","ID":"fi.SharedSequences.k2_UpdateRelationChildParent.0","MapID":"o.k2_UpdateRelationChildParent.eid","DataType":"Text","K2DataType":"Text","Index":0,"Length":0,"Mandatory":false,"HideOnMapModes":0}],"AdditionalPropertiesList":[{"XmlName":"type","ValueAsString":"function","Value":"function","Browsable":false,"ForXml":true,"ValueLinesSpan":1},{"XmlName":"name","ValueAsString":"k2_UpdateRelationChildParent","Value":"k2_UpdateRelationChildParent","Browsable":false,"ForXml":true,"ValueLinesSpan":1},{"XmlName":"category","ValueAsString":"SharedSequences","Value":"SharedSequences","Browsable":true,"ForXml":true,"FormatedName":"Category","ValueLinesSpan":1},{"XmlName":"id","ValueAsString":"SharedSequences.k2_UpdateRelationChildParent","Value":"SharedSequences.k2_UpdateRelationChildParent","Browsable":true,"ForXml":false,"FormatedName":"ID","ValueLinesSpan":1},{"XmlName":"ludbFunction","ValueAsString":"False","Value":false,"Browsable":true,"ForXml":false,"FormatedName":"Register As LUDB Function","ValueLinesSpan":1},{"XmlName":"code","ValueAsString":"/*\n *\tk2_UpdateRelationChildParent()\n *\tPerform the updpates from table TDM.lu_relation_statements with values generated on the Child LU\n *\n *\tTDM.lu_relation_statements - Holds the update statements and the target interface to perform the update. Relate the update with the child LU\n *\tTDM.lu_relation_values - Key values for the update\n *\n *\t$TrnRelationChildKeys[0] = TRN_SEQ\n *\t$TrnRelationChildValues[0] = PARENT_LU\n *\t$TrnRelationChildValues[1] = LUDB_SELECT_STT\n *\t$TrnRelationChildValues[2] = ACTIVE\n *\t$TrnRelationChildValues[3] = IS_SEQ\n *\n**/\n\n$lu_name = $GLOBALS['logicalUnit'];\n$task_id = getGlobalValue(\"TDM_TASK_EXE_ID\");\n\nforeach(loopThroughTranslationRecords('trnLuRelation_Child') as $TrnRelationChildKeys =&gt; $TrnRelationChildValues) {\t\n\tif($TrnRelationChildValues[2]!=\"true\") {\n\t\tcontinue;\n\t}\n\t\n\t$trn_seq = $TrnRelationChildKeys[0];\n\t$params = array($TrnRelationChildKeys[0], $TrnRelationChildValues[0], $lu_name, $task_id);\n\t$row = DBSelectRow('TDM', \"SELECT trn_seq, target_interface, update_statement FROM lu_relation_statements where trn_seq = $1 and parent_lu_name = $2 and child_lu_name = $3 and task_id = $4\", SQL_FETCH_MODE_ASSOC, $params);\n\t$targetInterface = $row['target_interface'];\n\t$updateStt = $row['update_statement'];\n\n\tif(!strpos($TrnRelationChildValues[1], 'L_FK')) {\n\t\treportUserMessage(\"TRN_SEQ $trn_seq Legacy Foreign Key (L_FK) value from child not defined\");\n\t\tk2_RejectRecord();\n\t}\n\t\n\t// Loop child translation ludb_select_stt result\n\tforeach(loopThroughDBSqlResult(\"ludb\", $TrnRelationChildValues[1]) as $childKeys =&gt; $childValues) {\n\t\t\n\t\t$params2 = array($TrnRelationChildKeys[0], $TrnRelationChildValues[0], $childValues[0], $task_id);\n\t\t$sql2 = \"SELECT l_fk, key_values FROM lu_relation_values where trn_seq = $1 and parent_lu = $2 and l_fk = $3 and task_id = $4\";\t\t\n\t\t\n\t\tforeach (loopThroughDBSqlResult('TDM', $sql2, SQL_FETCH_MODE_ASSOC, $params2) as $row2) {\n\t\t\t$updateStt = $row['update_statement'];\n\t\t\t\n\t\t\tif($TrnRelationChildValues[3]!=\"true\") {\n\t\t\t\t$updateStt = str_replace(\"{NEW_VAL}\", \"'\".$childValues['NEW_L_FK'].\"'\", $updateStt);\n\t\t\t} else {\n\t\t\t\t$updateStt = str_replace(\"{NEW_VAL}\", \"'\".$childValues['L_FK'].\"'\", $updateStt);\n\t\t\t}\n\t\t\t\n\t\t\t$keyValues = explode(\";\", $row2['key_values']);\n\t\t\n\t\t\tforeach($keyValues as $keyColumnValue) {\n\t\t\t\t$keyDetails = explode(\":\", $keyColumnValue);\n\t\t\t\t$updateStt = str_replace(\"{\".$keyDetails[0].\"}\", \"'\".$keyDetails[1].\"'\", $updateStt);\n\t\t\t}\n\t\t\t\n\t\t\t$queryUpdate = explode(\"where\", $updateStt);\n\t\t\t$setColumnPosition = strpos($queryUpdate[0], \"set\");\n\t\t\t$tableNameToUpdate = trim(substr($queryUpdate[0], 7, ($setColumnPosition-7)));\n\t\t\t$updWhereCondition = \" where \".trim(end($queryUpdate));\n\t\t\t$checkParentRecord = \"select 1 from \".$tableNameToUpdate.$updWhereCondition;\n\t\t\t\n\t\t\tif(DBSelectValue($targetInterface, $checkParentRecord)==1) {\n\t\t\t\tDBExecute($targetInterface, $updateStt);\n\t\t\t\treportUserMessage(\"perform update ($targetInterface): $updateStt\");\n\t\t\t}\n\t\t}\n\t}\n}","Value":"/*\n *\tk2_UpdateRelationChildParent()\n *\tPerform the updpates from table TDM.lu_relation_statements with values generated on the Child LU\n *\n *\tTDM.lu_relation_statements - Holds the update statements and the target interface to perform the update. Relate the update with the child LU\n *\tTDM.lu_relation_values - Key values for the update\n *\n *\t$TrnRelationChildKeys[0] = TRN_SEQ\n *\t$TrnRelationChildValues[0] = PARENT_LU\n *\t$TrnRelationChildValues[1] = LUDB_SELECT_STT\n *\t$TrnRelationChildValues[2] = ACTIVE\n *\t$TrnRelationChildValues[3] = IS_SEQ\n *\n**/\n\n$lu_name = $GLOBALS['logicalUnit'];\n$task_id = getGlobalValue(\"TDM_TASK_EXE_ID\");\n\nforeach(loopThroughTranslationRecords('trnLuRelation_Child') as $TrnRelationChildKeys =&gt; $TrnRelationChildValues) {\t\n\tif($TrnRelationChildValues[2]!=\"true\") {\n\t\tcontinue;\n\t}\n\t\n\t$trn_seq = $TrnRelationChildKeys[0];\n\t$params = array($TrnRelationChildKeys[0], $TrnRelationChildValues[0], $lu_name, $task_id);\n\t$row = DBSelectRow('TDM', \"SELECT trn_seq, target_interface, update_statement FROM lu_relation_statements where trn_seq = $1 and parent_lu_name = $2 and child_lu_name = $3 and task_id = $4\", SQL_FETCH_MODE_ASSOC, $params);\n\t$targetInterface = $row['target_interface'];\n\t$updateStt = $row['update_statement'];\n\n\tif(!strpos($TrnRelationChildValues[1], 'L_FK')) {\n\t\treportUserMessage(\"TRN_SEQ $trn_seq Legacy Foreign Key (L_FK) value from child not defined\");\n\t\tk2_RejectRecord();\n\t}\n\t\n\t// Loop child translation ludb_select_stt result\n\tforeach(loopThroughDBSqlResult(\"ludb\", $TrnRelationChildValues[1]) as $childKeys =&gt; $childValues) {\n\t\t\n\t\t$params2 = array($TrnRelationChildKeys[0], $TrnRelationChildValues[0], $childValues[0], $task_id);\n\t\t$sql2 = \"SELECT l_fk, key_values FROM lu_relation_values where trn_seq = $1 and parent_lu = $2 and l_fk = $3 and task_id = $4\";\t\t\n\t\t\n\t\tforeach (loopThroughDBSqlResult('TDM', $sql2, SQL_FETCH_MODE_ASSOC, $params2) as $row2) {\n\t\t\t$updateStt = $row['update_statement'];\n\t\t\t\n\t\t\tif($TrnRelationChildValues[3]!=\"true\") {\n\t\t\t\t$updateStt = str_replace(\"{NEW_VAL}\", \"'\".$childValues['NEW_L_FK'].\"'\", $updateStt);\n\t\t\t} else {\n\t\t\t\t$updateStt = str_replace(\"{NEW_VAL}\", \"'\".$childValues['L_FK'].\"'\", $updateStt);\n\t\t\t}\n\t\t\t\n\t\t\t$keyValues = explode(\";\", $row2['key_values']);\n\t\t\n\t\t\tforeach($keyValues as $keyColumnValue) {\n\t\t\t\t$keyDetails = explode(\":\", $keyColumnValue);\n\t\t\t\t$updateStt = str_replace(\"{\".$keyDetails[0].\"}\", \"'\".$keyDetails[1].\"'\", $updateStt);\n\t\t\t}\n\t\t\t\n\t\t\t$queryUpdate = explode(\"where\", $updateStt);\n\t\t\t$setColumnPosition = strpos($queryUpdate[0], \"set\");\n\t\t\t$tableNameToUpdate = trim(substr($queryUpdate[0], 7, ($setColumnPosition-7)));\n\t\t\t$updWhereCondition = \" where \".trim(end($queryUpdate));\n\t\t\t$checkParentRecord = \"select 1 from \".$tableNameToUpdate.$updWhereCondition;\n\t\t\t\n\t\t\tif(DBSelectValue($targetInterface, $checkParentRecord)==1) {\n\t\t\t\tDBExecute($targetInterface, $updateStt);\n\t\t\t\treportUserMessage(\"perform update ($targetInterface): $updateStt\");\n\t\t\t}\n\t\t}\n\t}\n}","Browsable":true,"ForXml":false,"FormatedName":"Code","ValueLinesSpan":4}],"PreMapExecutionCommandsList":[],"PostMapExecutionCommandsList":[],"ID":"SharedSequences.k2_UpdateRelationChildParent","Name":"k2_UpdateRelationChildParent","NodeOrder":0,"Module":6,"MapObjectModule":"MapTarget"}</TargetObject>
  </VcMapNode>
  <Link from="3" to="2" partID="147" pointsArr="202 132.636719 212 132.636719 426 99.03646 436 99.03646" fromNodePartID="129" fromNodeColumnName="IID" fromViewName="ADI_ROOT_TABLE" toNodePartID="143" toNodeColumnName="eid" />
</Graph>