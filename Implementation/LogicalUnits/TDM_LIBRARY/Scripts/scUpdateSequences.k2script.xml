<?xml version="1.0" encoding="utf-8"?>
<PhpScriptItem xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>scUpdateSequences</Name>
  <Code>/*
This script is used to update the sequences value on the target DB (sequence object or table) with the current value 
(after the sequences were used within k2view execution). 
It is required only for method 0 &amp; 2 (postgres &amp; memcached)
For Method 3 (from DB) and method 4 (GUID), there is no sequences managment within k2view and therefor there is no
need to use this script
For method 1, the initial value is being set when calling k2Seq_setBlock fucntion within the entity processing  
*/

//If sequence replacement is required
if(getGlobalValue('TDM_REPLACE_SEQUENCES'))
{
	foreach ( loopThroughTranslationRecords('trnSequencesDefinition') as $keysArray=&gt;$sequenceDetails)
	{   
		//Set the method based on trnSequencesDefinition.CONFIG_SET. If not set, get the value from the GLOBAL
		$methods = k2Seq_decideMethods($keysArray[0]);
		$method = $methods[1];
		
		//Only if the method is postgres or memcached the update is required
		if ($method == '2')
		{
			// Get Current and Next Value from current execution sequence
				$cur_sequence =k2_getSharedSeqValue($keysArray[0]);
				$NextSeq = $cur_sequence+1;
			
			$increment_by = k2seq_getIncBy($sequenceDetails);
			
			// Get Interface Details
			$Db = $sequenceDetails[0];
			$DbType = k2_getInterfaceTypeByName($Db);
			
			//If DB_SEQ_NAME is not empty, update sequence object in the target DB
			if (!is_null($sequenceDetails[1]))
			{
				switch ($DbType) {
					case 'oracle':
						//Use increment by changes as there is not restart option
						$cur_db_value = DBSelectValue($Db, "select $sequenceDetails[1].nextval as SEQ from dual");
						$new_increment = $cur_sequence - $cur_db_value;
						DBExecute ($Db,"alter sequence $sequenceDetails[1] increment by $new_increment"); 
				        DBSelectValue($Db, "select $sequenceDetails[1].nextval as SEQ from dual");
						DBExecute ($Db,"alter sequence $sequenceDetails[1] increment by $increment_by"); 
						DBExecute($Db,"commit");
						break;
					case 'postgresql':
					case 'sqlserver':
					case 'sybase_iq':
						//Update directly the next value to DB.
						DBExecute ($Db,"ALTER SEQUENCE $sequenceDetails[1] RESTART WITH  $NextSeq");
						break;	
					case 'db2':
						//Update directly the next value to DB.
						DBExecute ($Db,"ALTER SEQUENCE $sequenceDetails[1] RESTART WITH  $NextSeq");
						DBExecute($Db,"commit");	
						break;
					default:
						//Currently only Oracle, Postgres, Sybase and DB2 are supported
						reportUserMessage("DB Type currently not supported in scUpdateSequences");
				}		
			}
			//If DB_SEQ_TABLE is not empty
			elseif (!is_null ($sequenceDetails[2]))
			{
				
				DBUpdate ($Db,str_replace("?", $NextSeq, $sequenceDetails[3]));
				// Sql Server and Postgres do not need a commit;
				if($DbType == 'oracle' || $DbType =='db2' || $DbType =='sybase_iq' || $DbType =='sybase_ase')DBExecute ($Db, "commit");
			}
		}
		else
		{
			reportUserMessage ("No need to updated tagret DB for method: ".$method);
		}
	}
}
</Code>
  <IsSyntaxValid>true</IsSyntaxValid>
</PhpScriptItem>